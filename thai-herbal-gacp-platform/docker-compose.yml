version: '3.8'

services:
  # Database
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: gacp_prod
      POSTGRES_USER: gacp
      POSTGRES_PASSWORD: securepassword
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database/postgresql/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - gacp-net

  # Backend Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      EVENT_STORE_URL: "postgres://gacp:securepassword@postgres:5432/gacp_prod"
      FDA_API_URL: "https://fda-api.thailand.go.th"
      FDA_API_KEY: "${FDA_API_KEY}"
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - gacp-net

  # AI Services
  ai-validator:
    build:
      context: ./ai-services/reasoning-engine
    environment:
      MODEL_PATH: "/app/models/gacp_model_v1.h5"
      KNOWLEDGE_BASE_PATH: "/app/knowledge/gacp_rules.json"
    volumes:
      - ./ai-services/models:/app/models
    networks:
      - gacp-net

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    environment:
      API_URL: "http://backend:8080"
      AI_VALIDATOR_URL: "http://ai-validator:5000"
    ports:
      - "80:5000"
    depends_on:
      - backend
    networks:
      - gacp-net

  # Admin Panel
  admin:
    build:
      context: ./admin-panel
    ports:
      - "8081:80"
    environment:
      API_URL: "http://backend:8080"
    networks:
      - gacp-net

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - gacp-net

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./infrastructure/monitoring/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - gacp-net

volumes:
  pgdata:

networks:
  gacp-net:
    driver: bridge
